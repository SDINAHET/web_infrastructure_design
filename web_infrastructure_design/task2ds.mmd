sequenceDiagram
    participant User as User
    participant DNS as DNS (Domain Name Server)
    participant Firewall1 as Firewall (Inbound Traffic)
    participant LoadBalancer as Load Balancer (HAProxy + SSL Termination)
    participant Firewall2 as Firewall (Between Load Balancer and Servers)
    participant Server1 as Web Server 1 (Nginx)
    participant Server2 as Web Server 2 (Nginx)
    participant Firewall3 as Firewall (Database Protection)
    participant DBPrimary as Database Primary (MySQL Master)
    participant DBReplica as Database Replica (MySQL Slave)
    participant Monitoring as Monitoring Tools (Sumologic/Prometheus)

    User->>DNS: Resolve www.foobar.com
    DNS-->>User: Returns Load Balancer IP
    User->>Firewall1: HTTPS Request to Load Balancer
    Firewall1->>LoadBalancer: Allow HTTPS Traffic
    LoadBalancer->>Firewall2: Forward Traffic
    alt Server1 is available
        Firewall2->>Server1: Pass request to Web Server 1
    else Server1 is unavailable
        Firewall2->>Server2: Pass request to Web Server 2
    end
    Server1->>DBPrimary: Query database for data
    DBPrimary->>Firewall3: Protect database
    DBPrimary->>DBReplica: Replicate data
    DBPrimary-->>Server1: Return data
    Server1-->>LoadBalancer: HTTP Response
    LoadBalancer-->>User: Encrypted HTTPS Response

    Monitoring->>LoadBalancer: Collect QPS metrics
    Monitoring->>Server1: Collect logs and performance metrics
    Monitoring->>DBPrimary: Monitor database queries
    Monitoring->>DBReplica: Monitor replication status

    Note over Firewall1, LoadBalancer: Protect against unauthorized inbound traffic
    Note over LoadBalancer: SSL termination with HTTPS
    Note over Monitoring: Tracks server health, QPS, and performance
    Note over Firewall3, DBPrimary: Prevent unauthorized database access
